@model Group_Ledger.Models.TransactionViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Transaction</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ToFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ToFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ToFirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ToLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ToLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ToLastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
<div class="row">
    <div class="col-md-12">
        <table id="resultTable" class="display" cellspacing="0" width="100%">
            <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var url = "../../api/personapi";
            $('#resultTable').DataTable({
                responsive: true,
                "processing" : true,
                "ajax" : {
                    "url" : url,
                    dataSrc : ''
                },
                "columns" : [ {
                    "data" : "FirstName"
                }, {
                    "data" : "LastName"
                }]
            });
            // Super janky way to check if inputs are
            /*if ($('#fName').val().length && $('#fName').val() !== $('#fName').attr("placeholder")) {
                url.concat("?first=".concat($('#fName').val()));
                if ($('#lName').val().length && $('#lName').val() !== $('#lName').attr("placeholder")) {
                    url.concat("&last=".concat($('#lName').val()));

                }
            }
            $.ajax({
                //type: "GET",
                url: url,
                //cache: false,
                success: function (data) {
                    $(".boi").html(data);

                }
            });
            $.getJSON(url,
                function(data) {
                    var items = [];
                    items.push("<tr>");
                    $.each(data[0],
                        function(key, val) {
                            items.push("<th>" + key + "</th>");
                        });
                    items.push("</tr>");
                    $.each(data,
                        function(key, val) {
                            items.push("<tr>");
                            $.each(val,
                                function(k, v) {
                                    items.push("<td>" + v + "</td>");
                                });
                            items.push("</tr>");
                        });

                    $("<table/>",
                        {
                            "class": "table",
                            html: items.join("")
                        }).appendTo("body");
                });*/
        });
    </script>
}

